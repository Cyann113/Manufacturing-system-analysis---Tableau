<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.0c5kowx1cm10ql14xe1us075luzz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.0vxlbyq1ua56dp147pce80sl3uhp'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/User/Documents/GitHub/Deloitte data analysis internship/Manufacturing-system-analysis---Tableau' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0vxlbyq1ua56dp147pce80sl3uhp' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='unhealthy' datatype='integer' name='[Calculation_919578813589843968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_0h1yivx1gnsuf014wguuk07olpcb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/05/2025 08:53:09 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6542</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_9AA8C650711944CF81243D3E3ADB13C0'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0vxlbyq1ua56dp147pce80sl3uhp' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_174E09CD89D1422A9270DF0D67264985]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Downtime per Factory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0c5kowx1cm10ql14xe1us075luzz' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kowx1cm10ql14xe1us075luzz'>
            <column caption='unhealthy' datatype='integer' name='[Calculation_919578813589843968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_919578813589843968]' derivation='Sum' name='[sum:Calculation_919578813589843968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0c5kowx1cm10ql14xe1us075luzz].[none:factory:nk]' value='31' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0c5kowx1cm10ql14xe1us075luzz].[sum:Calculation_919578813589843968:qk]</rows>
        <cols>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{25DAA9DD-1B82-4BAC-9616-1F7B653FA841}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Downtime per Machine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0c5kowx1cm10ql14xe1us075luzz' />
          </datasources>
          <datasource-dependencies datasource='federated.0c5kowx1cm10ql14xe1us075luzz'>
            <column caption='unhealthy' datatype='integer' name='[Calculation_919578813589843968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_919578813589843968]' derivation='Sum' name='[sum:Calculation_919578813589843968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c5kowx1cm10ql14xe1us075luzz].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-factory-seiko&quot;' user:ui-action-filter='[Action1_174E09CD89D1422A9270DF0D67264985]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0c5kowx1cm10ql14xe1us075luzz].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0c5kowx1cm10ql14xe1us075luzz].[sum:Calculation_919578813589843968:qk]</rows>
        <cols>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{F27AAD4F-1E5B-4964-9E4B-60B11E747E0D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48579' id='3' name='Sheet 1' w='97538' x='1231' y='1421'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48579' id='5' name='Sheet 2' w='97538' x='1231' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97158' id='8' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1421'>
                <zone fixed-size='280' h='48579' id='3' is-fixed='true' name='Sheet 1' w='97538' x='1231' y='1421'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48579' id='5' is-fixed='true' name='Sheet 2' w='97538' x='1231' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6E1C6318-9B22-473C-BDF8-B301422C51D6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6CAAC70-0C0E-4991-AE81-C527A175FD43}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF8507D2-47F9-46A0-A06D-AD76C21B144D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[sum:Calculation_919578813589843968:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[none:factory:nk]</field>
                    <field>[federated.0c5kowx1cm10ql14xe1us075luzz].[sum:Calculation_919578813589843968:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-factory-seiko&quot;</value>
                  <value>480</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{EA965F9A-790E-404D-99B5-EE53B3D2877B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
